install.packages("janitor")
?read.csv
knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv("../raw data/State_to_State_Migration_Table_2022_T13")
dat <- read.csv("../raw data/State_to_State_Migration_Table_2022_T13.csv")
dat <- read.csv("./raw data/State_to_State_Migration_Table_2022_T13.csv")
library(readxl)
dat <- readxl::read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.csv")
dat <- readxl::read_xlsx("../raw data/State_to_State_Migration_Table_2022_T13.csv")
dat <- readxl::read_xlsx("raw data\State_to_State_Migration_Table_2022_T13.xlsx)
dat <- readxl::read_xlsx("../raw data/State_to_State_Migration_Table_2022_T13.xlsx)
dat <- readxl::read_xlsx("../raw data/State_to_State_Migration_Table_2022_T13.xlsx")
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx")
View(dat)
?read_xlsx
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation")
View(dat)
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation",
skip = 1)
dat[2,3]
library(tidyverse)
dat <- dat[, !apply(dat, 2, function(x) any(x == "MOE"))]
dat <- dat[, !apply(dat, 2, function(x) any(x == "MOE"))]
library(dplyr)
# Assuming your data frame is named 'df'
filtered_df <- dat %>%
select(-across(where(~ any(. == "MOE"))))
library(dplyr)
# Assuming your data frame is named 'df'
filtered_dat <- dat %>%
select(-matches("MOE"))
# 'filtered_df' now contains the original data frame with columns having "MOE" as values removed.
View(filtered_dat)
?across
library(dplyr)
# Assuming your data frame is named 'df'
filtered_df <- dat %>%
select_if(~ !any(. == "MOE"))
# 'filtered_df' now contains the original data frame with columns having "MOE" as values removed.
filtered_df
View(filtered_df)
library(dplyr)
# Assuming your data frame is named 'df'
filtered_df <- dat %>%
select_if(~ any(. == "MOE"))
# 'filtered_df' now contains the original data frame with columns having "MOE" as values removed.
library(dplyr)
# Assuming your data frame is named 'df'
filtered_df <- dat %>%
select_if(~ !any(. == "MOE"))
# 'filtered_df' now contains the original data frame with columns having "MOE" as values removed.
library(dplyr)
# Assuming your data frame is named 'df'
filtered_df <- dat %>%
select_if(~ !any(. == "MOE"))
# 'filtered_df' now contains the original data frame with columns having "MOE" as values removed.
library(dplyr)
# Assuming your data frame is named 'df'
filtered_df <- dat %>%
select_if(~ any(. == "MOE"))
# 'filtered_df' now contains the original data frame with columns having "MOE" as values removed.
library(dplyr)
# Assuming your data frame is named 'df'
filtered_df <- dat %>%
select_if(~ !any(. == "MOE"))
# 'filtered_df' now contains the original data frame with columns having "MOE" as values removed.
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation",
skip = 1)
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation",
skip = 1)
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation",
skip = 1)
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation",
skip = 2)
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation",
skip = 2)
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation (2)",
skip = 2)
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation (2)",
skip = 2)
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation (2)",
skip = 2)
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation (2)",
skip = 2)
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation (2)",
skip = 2)
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation (2)",
range = "A3:BH56",
skip = 2)
colnames(dat)
usethis::edit_r_environ()
Sys.getenv("ipums_api_key")
pak::pak(ipumsr)
pak::pak("ipumsr")
library(ipumsr)
source("~/GitHub/real-estate-project/reason_for_moving_data_sourcing.R", echo=TRUE)
ipums_data_collections()
source("~/GitHub/real-estate-project/reason_for_moving_data_sourcing.R", echo=TRUE)
source("~/GitHub/real-estate-project/reason_for_moving_data_sourcing.R", echo=TRUE)
source("~/GitHub/real-estate-project/reason_for_moving_data_sourcing.R", echo=TRUE)
?define_extract_cps
source("~/GitHub/real-estate-project/reason_for_moving_data_sourcing.R", echo=TRUE)
source("~/GitHub/real-estate-project/reason_for_moving_data_sourcing.R", echo=TRUE)
source("~/GitHub/real-estate-project/reason_for_moving_data_sourcing.R", echo=TRUE)
View(data)
source("~/GitHub/real-estate-project/reason_for_moving_data_sourcing.R", echo=TRUE)
summary(data$WHYMOVE)
source("~/GitHub/real-estate-project/reason_for_moving_data_sourcing.R", echo=TRUE)
hist(data$WHYMOVE)
# remove rows where WHYMOVE is 0
data_movers_only <- data[data$WHYMOVE != 0, ]
hist(data_movers_only$WHYMOVE)
summary(data_movers_only$WHYMOVE)
View(data_movers_only)
# remove rows where WHYMOVE is 0 and MIGSTA1 is not 91 and 99
data_movers_only <- data %>%
filter(WHYMOVE != 0) %>%
filter(MIGSTA1 == 91 | MIGSTA1 == 99)
# remove rows where WHYMOVE is 0 and MIGSTA1 is not 91 and 99
data_movers_only <- data |>
filter(WHYMOVE != 0) |>
filter(MIGSTA1 == 91 | MIGSTA1 == 99)
library(tidyverse)
# remove rows where WHYMOVE is 0 and MIGSTA1 is not 91 and 99
data_movers_only <- data |>
filter(WHYMOVE != 0) |>
filter(MIGSTA1 == 91 | MIGSTA1 == 99)
hist(data_movers_only$WHYMOVE)
# remove rows where WHYMOVE is 0 and MIGSTA1 is not 91 or 99
data_movers_only <- data |>
filter(WHYMOVE != 0) |>
filter(!(MIGSTA1 == 91 | MIGSTA1 == 99))
hist(data_movers_only$WHYMOVE)
# filter for MIGSTA1 == 1 and WHYMOVE == 1
# MIGSTA1 == 1 is the state code for Alabama
# WHYMOVE == 1 is the reason code for job
data_movers_only |>
filter(MIGSTA1 == 1) |>
filter(WHYMOVE == 1)
View(data_movers_only |>
filter(MIGSTA1 == 1) |>
filter(WHYMOVE == 1))
hist(data$WHYMOVE)
ggplot(data_movers_only, aes(x = WHYMOVE)) +
geom_bar() +
labs(title = "Reason for Moving to Another State",
x = "Reason Code",
y = "Count")
ggplot(data_movers_only, aes(x = WHYMOVE)) +
geom_bar() +
labs(title = "Reason for Moving to Another State",
x = "Reason Code",
y = "Count")
source("~/GitHub/real-estate-project/reason_for_moving_data_sourcing.R", echo=TRUE)
ggplot(data_movers_only, aes(x = WHYMOVE)) +
geom_histogram() +
labs(title = "Reason for Moving to Another State",
x = "Reason Code",
y = "Count")
ggplot(data_movers_only, aes(x = WHYMOVE)) +
geom_bar() +
labs(title = "Reason for Moving to Another State",
x = "Reason Code",
y = "Count")
# remove rows where WHYMOVE is 0
# and MIGSTA1 is not 91 or 99
# delete columns that are not WHYMOVE and MIGSTA1
data_movers_only <- data |>
filter(WHYMOVE != 0) |>
filter(!(MIGSTA1 == 91 | MIGSTA1 == 99)) |>
select(WHYMOVE, MIGSTA1)
table(data_movers_only$WHYMOVE)
# table aggregate by 2022 only
table(data_movers_only$WHYMOVE, data_movers_only$MIGSTA1)
# remove rows where WHYMOVE is 0
# and MIGSTA1 is not 91 or 99
# delete columns that are not WHYMOVE and MIGSTA1
data_movers_only <- data |>
filter(WHYMOVE != 0) |>
filter(!(MIGSTA1 == 91 | MIGSTA1 == 99)) |>
select(YEAR, WHYMOVE, MIGSTA1)
# table aggregate by 2022 only
table(data_movers_only[data_movers_only$YEAR == 2022, ]$WHYMOVE)
# now create proportion table
prop.table(table(data_movers_only[data_movers_only$YEAR == 2022, ]$WHYMOVE))
# now create proportion table
prop.table(table(data_movers_only$WHYMOVE))
# plot proportion table
prop.table(table(data_movers_only$WHYMOVE)) |>
as.data.frame() |>
ggplot(aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity") +
labs(title = "Reason for Moving to Another State",
x = "Reason Code",
y = "Proportion")
